<UserControl x:Class="MediaViewer.ImagePanel.ImageToolbarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"             
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MediaViewer;component/Resources/Dictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ToolBar Background="{StaticResource toolBarBackgroundColor}">
            <xctk:DropDownButton x:Name="scaleDropDownButton" ToolTip="Scale Mode" Height="16">
                <xctk:DropDownButton.DropDownContent>
                    <StackPanel>
                        <RadioButton GroupName="Scale" Content="None"
								IsChecked="{Binding SelectedScaleMode, ConverterParameter=NONE, Converter={StaticResource enumConverter}, Mode=TwoWay}"  />
                        <RadioButton GroupName="Scale" Content="Auto" 
								IsChecked="{Binding SelectedScaleMode, ConverterParameter=AUTO, Converter={StaticResource enumConverter}, Mode=TwoWay}"  />
                        <RadioButton GroupName="Scale" Content="Fit Height"
								IsChecked="{Binding SelectedScaleMode, ConverterParameter=FIT_HEIGHT, Converter={StaticResource enumConverter}, Mode=TwoWay}"  />
                        <RadioButton GroupName="Scale" Content="Fit Width"
								IsChecked="{Binding SelectedScaleMode, ConverterParameter=FIT_WIDTH, Converter={StaticResource enumConverter}, Mode=TwoWay}"  />
                        <Separator/>
                        <RadioButton GroupName="Scale"
								IsChecked="{Binding SelectedScaleMode, ConverterParameter=CUSTOM, Converter={StaticResource enumConverter}, Mode=TwoWay}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Custom" VerticalAlignment="Center"/>
                                <Button Grid.Column="1" Content="{Binding Scale, Converter={StaticResource scaleConverter}}" Command="{Binding SetCustomScaleCommand}"
										ToolTip="Change Scale"/>
                            </Grid>
                        </RadioButton>
                    </StackPanel>
                </xctk:DropDownButton.DropDownContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="pack://application:,,,/Resources/Icons/ruler.ico" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Margin="2,0,0,0" Text="{Binding SelectedScaleMode, Converter={StaticResource scaleEnumToStringConverter}}" VerticalAlignment="Center"/>
                </Grid>
            </xctk:DropDownButton>
            <xctk:DropDownButton x:Name="rotateDropDownButton" ToolTip="Rotation Mode" Height="16">
                <xctk:DropDownButton.DropDownContent>
                    <StackPanel>
                        <RadioButton GroupName="Rotation" Content="None"
								IsChecked="{Binding SelectedRotationMode, ConverterParameter=NONE, Converter={StaticResource enumConverter}, Mode=TwoWay}"  />
                        <RadioButton GroupName="Rotation" Content="90°" 
								IsChecked="{Binding SelectedRotationMode, ConverterParameter=CW_90, Converter={StaticResource enumConverter}, Mode=TwoWay}"  />
                        <RadioButton GroupName="Rotation" Content="180°"
								IsChecked="{Binding SelectedRotationMode, ConverterParameter=CW_180, Converter={StaticResource enumConverter}, Mode=TwoWay}"  />
                        <RadioButton GroupName="Rotation" Content="-90°"
								IsChecked="{Binding SelectedRotationMode, ConverterParameter=CCW_90, Converter={StaticResource enumConverter}, Mode=TwoWay}"  />
                        <Separator/>
                        <RadioButton GroupName="Rotation"
								IsChecked="{Binding SelectedRotationMode, ConverterParameter=CUSTOM, Converter={StaticResource enumConverter}, Mode=TwoWay}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Custom" VerticalAlignment="Center"/>
                                <Button Grid.Column="1" Content="{Binding CustomRotation, Converter={StaticResource degreesConverter}}" Command="{Binding SetCustomRotationCommand}"
										ToolTip="Change Rotation"/>
                            </Grid>
                        </RadioButton>
                    </StackPanel>
                </xctk:DropDownButton.DropDownContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="pack://application:,,,/Resources/Icons/rotate.ico" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Margin="2,0,0,0" Text="{Binding SelectedRotationMode, Converter={StaticResource rotationEnumToStringConverter}}" VerticalAlignment="Center"/>
                </Grid>
            </xctk:DropDownButton>
            <CheckBox x:Name="flipImageHorizontalCheckBox" Height="16" ToolTip="Flip Image Horizontally" IsChecked="{Binding FlipX}">
                <Image Source="pack://application:,,,/Resources/Icons/FlipHorizontal.ico"/>
            </CheckBox>
            <CheckBox x:Name="flipImageVerticalCheckBox" Height="16" ToolTip="Flip Image Vertically" IsChecked="{Binding FlipY}">
                <Image Source="pack://application:,,,/Resources/Icons/FlipVertical.ico"/>
            </CheckBox>
            <Button x:Name="brightnessButton" Height="16" ToolTip="Brightness" Command="{Binding SetBrightnessCommand}">
                <Image Source="pack://application:,,,/Resources/Icons/brightness.ico"/>
            </Button>
            <Button x:Name="contrastButton" Height="16" ToolTip="Contrast" Command="{Binding SetContrastCommand}">
                <Image Source="pack://application:,,,/Resources/Icons/contrast.ico"/>
            </Button>
        </ToolBar>
    </Grid>
</UserControl>
