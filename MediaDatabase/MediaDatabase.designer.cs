#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediaDatabase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="mediadatabase")]
	public partial class MediaDatabaseContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMedia(Media instance);
    partial void UpdateMedia(Media instance);
    partial void DeleteMedia(Media instance);
    partial void InsertMediaTag(MediaTag instance);
    partial void UpdateMediaTag(MediaTag instance);
    partial void DeleteMediaTag(MediaTag instance);
    partial void InsertMediaThumb(MediaThumb instance);
    partial void UpdateMediaThumb(MediaThumb instance);
    partial void DeleteMediaThumb(MediaThumb instance);
    #endregion
		
		public MediaDatabaseContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MediaDatabaseContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MediaDatabaseContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MediaDatabaseContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Media> Media
		{
			get
			{
				return this.GetTable<Media>();
			}
		}
		
		public System.Data.Linq.Table<MediaTag> MediaTag
		{
			get
			{
				return this.GetTable<MediaTag>();
			}
		}
		
		public System.Data.Linq.Table<MediaThumb> MediaThumb
		{
			get
			{
				return this.GetTable<MediaThumb>();
			}
		}
	}
	
	[Table()]
	public partial class Media : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Location;
		
		private string _Description;
		
		private string _Author;
		
		private string _Copyright;
		
		private System.Nullable<byte> _Rating;
		
		private System.Nullable<System.DateTime> _MetaDataModified;
		
		private System.Nullable<System.DateTime> _MetaDataCreated;
		
		private string _Title;
		
		private System.Nullable<byte> _CanStoreMetaData;
		
		private string _CreatorTool;
		
		private int _Used;
		
		private System.Nullable<System.DateTime> _MetaDataDate;
		
		private long _LastWriteTime;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private EntitySet<MediaTag> _MediaTag;
		
		private EntitySet<MediaThumb> _MediaThumb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnRatingChanging(System.Nullable<byte> value);
    partial void OnRatingChanged();
    partial void OnMetaDataModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnMetaDataModifiedChanged();
    partial void OnMetaDataCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnMetaDataCreatedChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCanStoreMetaDataChanging(System.Nullable<byte> value);
    partial void OnCanStoreMetaDataChanged();
    partial void OnCreatorToolChanging(string value);
    partial void OnCreatorToolChanged();
    partial void OnUsedChanging(int value);
    partial void OnUsedChanged();
    partial void OnMetaDataDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMetaDataDateChanged();
    partial void OnLastWriteTimeChanging(long value);
    partial void OnLastWriteTimeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    #endregion
		
		public Media()
		{
			this._MediaTag = new EntitySet<MediaTag>(new Action<MediaTag>(this.attach_MediaTag), new Action<MediaTag>(this.detach_MediaTag));
			this._MediaThumb = new EntitySet<MediaThumb>(new Action<MediaThumb>(this.attach_MediaThumb), new Action<MediaThumb>(this.detach_MediaThumb));
			OnCreated();
		}
		
		[Column(Name="location", Storage="_Location", DbType="NVarChar(512) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Name="description", Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Column(Name="author", Storage="_Author", DbType="NVarChar(256)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[Column(Name="copyright", Storage="_Copyright", DbType="NVarChar(1024)")]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[Column(Name="rating", Storage="_Rating", DbType="TinyInt")]
		public System.Nullable<byte> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[Column(Name="metaDataModified", Storage="_MetaDataModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> MetaDataModified
		{
			get
			{
				return this._MetaDataModified;
			}
			set
			{
				if ((this._MetaDataModified != value))
				{
					this.OnMetaDataModifiedChanging(value);
					this.SendPropertyChanging();
					this._MetaDataModified = value;
					this.SendPropertyChanged("MetaDataModified");
					this.OnMetaDataModifiedChanged();
				}
			}
		}
		
		[Column(Name="metaDataCreated", Storage="_MetaDataCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> MetaDataCreated
		{
			get
			{
				return this._MetaDataCreated;
			}
			set
			{
				if ((this._MetaDataCreated != value))
				{
					this.OnMetaDataCreatedChanging(value);
					this.SendPropertyChanging();
					this._MetaDataCreated = value;
					this.SendPropertyChanged("MetaDataCreated");
					this.OnMetaDataCreatedChanged();
				}
			}
		}
		
		[Column(Name="title", Storage="_Title", DbType="NVarChar(512)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Name="canStoreMetaData", Storage="_CanStoreMetaData", DbType="TinyInt")]
		public System.Nullable<byte> CanStoreMetaData
		{
			get
			{
				return this._CanStoreMetaData;
			}
			set
			{
				if ((this._CanStoreMetaData != value))
				{
					this.OnCanStoreMetaDataChanging(value);
					this.SendPropertyChanging();
					this._CanStoreMetaData = value;
					this.SendPropertyChanged("CanStoreMetaData");
					this.OnCanStoreMetaDataChanged();
				}
			}
		}
		
		[Column(Name="creatorTool", Storage="_CreatorTool", DbType="NVarChar(512)")]
		public string CreatorTool
		{
			get
			{
				return this._CreatorTool;
			}
			set
			{
				if ((this._CreatorTool != value))
				{
					this.OnCreatorToolChanging(value);
					this.SendPropertyChanging();
					this._CreatorTool = value;
					this.SendPropertyChanged("CreatorTool");
					this.OnCreatorToolChanged();
				}
			}
		}
		
		[Column(Name="used", Storage="_Used", DbType="Int NOT NULL")]
		public int Used
		{
			get
			{
				return this._Used;
			}
			set
			{
				if ((this._Used != value))
				{
					this.OnUsedChanging(value);
					this.SendPropertyChanging();
					this._Used = value;
					this.SendPropertyChanged("Used");
					this.OnUsedChanged();
				}
			}
		}
		
		[Column(Name="metaDataDate", Storage="_MetaDataDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MetaDataDate
		{
			get
			{
				return this._MetaDataDate;
			}
			set
			{
				if ((this._MetaDataDate != value))
				{
					this.OnMetaDataDateChanging(value);
					this.SendPropertyChanging();
					this._MetaDataDate = value;
					this.SendPropertyChanged("MetaDataDate");
					this.OnMetaDataDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastWriteTime", DbType="BigInt NOT NULL")]
		public long LastWriteTime
		{
			get
			{
				return this._LastWriteTime;
			}
			set
			{
				if ((this._LastWriteTime != value))
				{
					this.OnLastWriteTimeChanging(value);
					this.SendPropertyChanging();
					this._LastWriteTime = value;
					this.SendPropertyChanged("LastWriteTime");
					this.OnLastWriteTimeChanged();
				}
			}
		}
		
		[Column(Name="latitude", Storage="_Latitude", DbType="NVarChar(32)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[Column(Name="longitude", Storage="_Longitude", DbType="NVarChar(32)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[Association(Name="Media_MediaTag", Storage="_MediaTag", ThisKey="Location", OtherKey="Location")]
		public EntitySet<MediaTag> MediaTag
		{
			get
			{
				return this._MediaTag;
			}
			set
			{
				this._MediaTag.Assign(value);
			}
		}
		
		[Association(Name="Media_MediaThumb", Storage="_MediaThumb", ThisKey="Location", OtherKey="Location")]
		public EntitySet<MediaThumb> MediaThumb
		{
			get
			{
				return this._MediaThumb;
			}
			set
			{
				this._MediaThumb.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MediaTag(MediaTag entity)
		{
			this.SendPropertyChanging();
			entity.Media = this;
		}
		
		private void detach_MediaTag(MediaTag entity)
		{
			this.SendPropertyChanging();
			entity.Media = null;
		}
		
		private void attach_MediaThumb(MediaThumb entity)
		{
			this.SendPropertyChanging();
			entity.Media = this;
		}
		
		private void detach_MediaThumb(MediaThumb entity)
		{
			this.SendPropertyChanging();
			entity.Media = null;
		}
	}
	
	[Table()]
	public partial class MediaTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Location;
		
		private string _Tag;
		
		private EntityRef<Media> _Media;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    #endregion
		
		public MediaTag()
		{
			this._Media = default(EntityRef<Media>);
			OnCreated();
		}
		
		[Column(Name="location", Storage="_Location", DbType="NVarChar(512) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Name="tag", Storage="_Tag", DbType="NVarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[Association(Name="Media_MediaTag", Storage="_Media", ThisKey="Location", OtherKey="Location", IsForeignKey=true)]
		public Media Media
		{
			get
			{
				return this._Media.Entity;
			}
			set
			{
				Media previousValue = this._Media.Entity;
				if (((previousValue != value) 
							|| (this._Media.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Media.Entity = null;
						previousValue.MediaTag.Remove(this);
					}
					this._Media.Entity = value;
					if ((value != null))
					{
						value.MediaTag.Add(this);
						this._Location = value.Location;
					}
					else
					{
						this._Location = default(string);
					}
					this.SendPropertyChanged("Media");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table()]
	public partial class MediaThumb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Location;
		
		private System.Data.Linq.Binary _ImageData;
		
		private int _ThumbNr;
		
		private EntityRef<Media> _Media;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnImageDataChanging(System.Data.Linq.Binary value);
    partial void OnImageDataChanged();
    partial void OnThumbNrChanging(int value);
    partial void OnThumbNrChanged();
    #endregion
		
		public MediaThumb()
		{
			this._Media = default(EntityRef<Media>);
			OnCreated();
		}
		
		[Column(Name="location", Storage="_Location", DbType="NVarChar(512) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Name="imageData", Storage="_ImageData", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ImageData
		{
			get
			{
				return this._ImageData;
			}
			set
			{
				if ((this._ImageData != value))
				{
					this.OnImageDataChanging(value);
					this.SendPropertyChanging();
					this._ImageData = value;
					this.SendPropertyChanged("ImageData");
					this.OnImageDataChanged();
				}
			}
		}
		
		[Column(Name="thumbNr", Storage="_ThumbNr", DbType="Int NOT NULL")]
		public int ThumbNr
		{
			get
			{
				return this._ThumbNr;
			}
			set
			{
				if ((this._ThumbNr != value))
				{
					this.OnThumbNrChanging(value);
					this.SendPropertyChanging();
					this._ThumbNr = value;
					this.SendPropertyChanged("ThumbNr");
					this.OnThumbNrChanged();
				}
			}
		}
		
		[Association(Name="Media_MediaThumb", Storage="_Media", ThisKey="Location", OtherKey="Location", IsForeignKey=true, DeleteOnNull=true)]
		public Media Media
		{
			get
			{
				return this._Media.Entity;
			}
			set
			{
				Media previousValue = this._Media.Entity;
				if (((previousValue != value) 
							|| (this._Media.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Media.Entity = null;
						previousValue.MediaThumb.Remove(this);
					}
					this._Media.Entity = value;
					if ((value != null))
					{
						value.MediaThumb.Add(this);
						this._Location = value.Location;
					}
					else
					{
						this._Location = default(string);
					}
					this.SendPropertyChanged("Media");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
